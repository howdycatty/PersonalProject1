{"ast":null,"code":"import _toConsumableArray from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\src\\\\views\\\\ProfileList\\\\UserPage1.jsx\";\nimport React from \"react\";\nimport * as myProjectService from \"../../services/myProjectService\";\nimport { Card, CardBody, CardFooter, Row, Col } from \"reactstrap\";\nimport CardAuthor from \"components/CardElements/CardAuthor.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Dropdown from \"components/Dropdown\";\nimport YogaPerson from \"components/YogaPerson\";\nimport _ from \"lodash\";\n\nvar UserPage1 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserPage1, _React$Component);\n\n  function UserPage1() {\n    var _this;\n\n    _classCallCheck(this, UserPage1);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserPage1).call(this));\n\n    _this.onGetAllSuccess = function (response) {\n      console.log(\"successful get all profiles\");\n\n      _this.setState({\n        myProject: response.data.items\n      });\n\n      console.log(response.data);\n    };\n\n    _this.onDeleteSuccess = function () {};\n\n    _this.onError = function () {\n      console.log(\"error\");\n    };\n\n    _this.onProfileUpdate = function (e, yoga) {\n      var id = yoga.id;\n\n      _this.props.history.push(\"/createprofile/\" + id, yoga);\n    };\n\n    _this.state = {\n      myProject: [],\n      orderBy: \"firstName\",\n      order: \"asc\",\n      dropdownActive: true\n    };\n    _this.doOrderBy = _this.doOrderBy.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.doOrder = _this.doOrder.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserPage1, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"mounted\");\n      myProjectService.getAllProfiles().then(this.onGetAllSuccess).catch(this.onError);\n    }\n  }, {\n    key: \"onProfileDelete\",\n    value: function onProfileDelete(e, yoga) {\n      var _this2 = this;\n\n      var id = yoga.id;\n      myProjectService.deleteProfile(id).then(function (response) {\n        var list = _toConsumableArray(_this2.state.myProject);\n\n        var newList = list.filter(function (object) {\n          return object.id !== yoga.id;\n        }); // console.log(newComments);\n\n        _this2.setState({\n          myProject: _toConsumableArray(newList)\n        }, function () {\n          return console.log(_this2.state);\n        });\n      }).catch(this.onError);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(e) {\n      e.preventDefault();\n      var isActive = this.state.dropdownActive;\n      isActive = !isActive;\n      this.setState({\n        dropdownActive: isActive\n      });\n    }\n  }, {\n    key: \"doOrderBy\",\n    value: function doOrderBy(e) {\n      e.preventDefault();\n      var newOrderBy = e.target.getAttribute(\"data-value\");\n      this.setState({\n        orderBy: newOrderBy\n      });\n    }\n  }, {\n    key: \"doOrder\",\n    value: function doOrder(e) {\n      e.preventDefault();\n      var newOrder = e.target.getAttribute(\"data-value\");\n      this.setState({\n        order: newOrder\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var orderBy = this.state.orderBy;\n      var order = this.state.order;\n      var sorted = this.state.myProject;\n      sorted = _.orderBy(sorted, function (item) {\n        return item[orderBy];\n      }, order);\n      var items = sorted.map(function (item) {\n        return React.createElement(YogaPerson, {\n          myProject: item,\n          key: item.id,\n          orderBy: _this3.state.orderBy,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        });\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"clearfix\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        toggle: this.toggle,\n        dropdownActive: this.state.dropdownActive,\n        doOrderBy: this.doOrderBy,\n        doOrder: this.doOrder,\n        orderBy: this.state.orderBy,\n        order: this.state.order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), items));\n    }\n  }]);\n\n  return UserPage1;\n}(React.Component);\n\nexport default UserPage1;","map":{"version":3,"sources":["C:\\SF.Code\\PersonalProject1\\client\\src\\views\\ProfileList\\UserPage1.jsx"],"names":["React","myProjectService","Card","CardBody","CardFooter","Row","Col","CardAuthor","Button","Dropdown","YogaPerson","_","UserPage1","onGetAllSuccess","response","console","log","setState","myProject","data","items","onDeleteSuccess","onError","onProfileUpdate","e","yoga","id","props","history","push","state","orderBy","order","dropdownActive","doOrderBy","bind","doOrder","toggle","getAllProfiles","then","catch","deleteProfile","list","newList","filter","object","preventDefault","isActive","newOrderBy","target","getAttribute","newOrder","sorted","item","map","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,iCAAlC;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,GAArC,EAA0CC,GAA1C,QAAqD,YAArD;AAEA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEMC,S;;;;;AACJ,uBAAc;AAAA;;AAAA;;AACZ;;AADY,UAoBdC,eApBc,GAoBI,UAAAC,QAAQ,EAAI;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AACA,YAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEJ,QAAQ,CAACK,IAAT,CAAcC;AADb,OAAd;;AAIAL,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACK,IAArB;AACD,KA3Ba;;AAAA,UA4BdE,eA5Bc,GA4BI,YAAM,CAAE,CA5BZ;;AAAA,UA8BdC,OA9Bc,GA8BJ,YAAM;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAhCa;;AAAA,UAkCdO,eAlCc,GAkCI,UAACC,CAAD,EAAIC,IAAJ,EAAa;AAC7B,UAAIC,EAAE,GAAGD,IAAI,CAACC,EAAd;;AACA,YAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,oBAAoBH,EAA5C,EAAgDD,IAAhD;AACD,KArCa;;AAEZ,UAAKK,KAAL,GAAa;AACXZ,MAAAA,SAAS,EAAE,EADA;AAEXa,MAAAA,OAAO,EAAE,WAFE;AAGXC,MAAAA,KAAK,EAAE,KAHI;AAIXC,MAAAA,cAAc,EAAE;AAJL,KAAb;AAMA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,uDAAf;AACA,UAAKE,MAAL,GAAc,MAAKA,MAAL,CAAYF,IAAZ,uDAAd;AAVY;AAWb;;;;wCAEmB;AAClBpB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAf,MAAAA,gBAAgB,CACbqC,cADH,GAEGC,IAFH,CAEQ,KAAK1B,eAFb,EAGG2B,KAHH,CAGS,KAAKlB,OAHd;AAID;;;oCAoBeE,C,EAAGC,I,EAAM;AAAA;;AACvB,UAAIC,EAAE,GAAGD,IAAI,CAACC,EAAd;AAEAzB,MAAAA,gBAAgB,CACbwC,aADH,CACiBf,EADjB,EAEGa,IAFH,CAEQ,UAAAzB,QAAQ,EAAI;AAChB,YAAI4B,IAAI,sBAAO,MAAI,CAACZ,KAAL,CAAWZ,SAAlB,CAAR;;AACA,YAAIyB,OAAO,GAAGD,IAAI,CAACE,MAAL,CAAY,UAAAC,MAAM;AAAA,iBAAIA,MAAM,CAACnB,EAAP,KAAcD,IAAI,CAACC,EAAvB;AAAA,SAAlB,CAAd,CAFgB,CAGhB;;AACA,QAAA,MAAI,CAACT,QAAL,CAAc;AAAEC,UAAAA,SAAS,qBAAMyB,OAAN;AAAX,SAAd,EAA2C;AAAA,iBACzC5B,OAAO,CAACC,GAAR,CAAY,MAAI,CAACc,KAAjB,CADyC;AAAA,SAA3C;AAGD,OATH,EAUGU,KAVH,CAUS,KAAKlB,OAVd;AAWD;;;2BAEME,C,EAAG;AACRA,MAAAA,CAAC,CAACsB,cAAF;AACA,UAAIC,QAAQ,GAAG,KAAKjB,KAAL,CAAWG,cAA1B;AACAc,MAAAA,QAAQ,GAAG,CAACA,QAAZ;AACA,WAAK9B,QAAL,CAAc;AAAEgB,QAAAA,cAAc,EAAEc;AAAlB,OAAd;AACD;;;8BACSvB,C,EAAG;AACXA,MAAAA,CAAC,CAACsB,cAAF;AACA,UAAME,UAAU,GAAGxB,CAAC,CAACyB,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAnB;AACA,WAAKjC,QAAL,CAAc;AAAEc,QAAAA,OAAO,EAAEiB;AAAX,OAAd;AACD;;;4BACOxB,C,EAAG;AACTA,MAAAA,CAAC,CAACsB,cAAF;AACA,UAAMK,QAAQ,GAAG3B,CAAC,CAACyB,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAjB;AACA,WAAKjC,QAAL,CAAc;AAAEe,QAAAA,KAAK,EAAEmB;AAAT,OAAd;AACD;;;6BACQ;AAAA;;AACP,UAAMpB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMC,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;AACA,UAAIoB,MAAM,GAAG,KAAKtB,KAAL,CAAWZ,SAAxB;AAEAkC,MAAAA,MAAM,GAAGzC,CAAC,CAACoB,OAAF,CACPqB,MADO,EAEP,UAAAC,IAAI,EAAI;AACN,eAAOA,IAAI,CAACtB,OAAD,CAAX;AACD,OAJM,EAKPC,KALO,CAAT;AAQA,UAAMZ,KAAK,GAAGgC,MAAM,CAACE,GAAP,CAAW,UAAAD,IAAI,EAAI;AAC/B,eACE,oBAAC,UAAD;AACE,UAAA,SAAS,EAAEA,IADb;AAEE,UAAA,GAAG,EAAEA,IAAI,CAAC3B,EAFZ;AAGE,UAAA,OAAO,EAAE,MAAI,CAACI,KAAL,CAAWC,OAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,OARa,CAAd;AAUA,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,MAAM,EAAE,KAAKM,MADf;AAEE,QAAA,cAAc,EAAE,KAAKP,KAAL,CAAWG,cAF7B;AAGE,QAAA,SAAS,EAAE,KAAKC,SAHlB;AAIE,QAAA,OAAO,EAAE,KAAKE,OAJhB;AAKE,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC,OALtB;AAME,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAWGZ,KAXH,CADF,CADF;AAkBD;;;;EAjHqBpB,KAAK,CAACuD,S;;AAoH9B,eAAe3C,SAAf","sourcesContent":["import React from \"react\";\r\nimport * as myProjectService from \"../../services/myProjectService\";\r\n\r\nimport { Card, CardBody, CardFooter, Row, Col } from \"reactstrap\";\r\n\r\nimport CardAuthor from \"components/CardElements/CardAuthor.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\nimport Dropdown from \"components/Dropdown\";\r\nimport YogaPerson from \"components/YogaPerson\";\r\nimport _ from \"lodash\";\r\n\r\nclass UserPage1 extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myProject: [],\r\n      orderBy: \"firstName\",\r\n      order: \"asc\",\r\n      dropdownActive: true\r\n    };\r\n    this.doOrderBy = this.doOrderBy.bind(this);\r\n    this.doOrder = this.doOrder.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted\");\r\n    myProjectService\r\n      .getAllProfiles()\r\n      .then(this.onGetAllSuccess)\r\n      .catch(this.onError);\r\n  }\r\n  onGetAllSuccess = response => {\r\n    console.log(\"successful get all profiles\");\r\n    this.setState({\r\n      myProject: response.data.items\r\n    });\r\n\r\n    console.log(response.data);\r\n  };\r\n  onDeleteSuccess = () => {};\r\n\r\n  onError = () => {\r\n    console.log(\"error\");\r\n  };\r\n\r\n  onProfileUpdate = (e, yoga) => {\r\n    let id = yoga.id;\r\n    this.props.history.push(\"/createprofile/\" + id, yoga);\r\n  };\r\n\r\n  onProfileDelete(e, yoga) {\r\n    let id = yoga.id;\r\n\r\n    myProjectService\r\n      .deleteProfile(id)\r\n      .then(response => {\r\n        let list = [...this.state.myProject];\r\n        let newList = list.filter(object => object.id !== yoga.id);\r\n        // console.log(newComments);\r\n        this.setState({ myProject: [...newList] }, () =>\r\n          console.log(this.state)\r\n        );\r\n      })\r\n      .catch(this.onError);\r\n  }\r\n\r\n  toggle(e) {\r\n    e.preventDefault();\r\n    let isActive = this.state.dropdownActive;\r\n    isActive = !isActive;\r\n    this.setState({ dropdownActive: isActive });\r\n  }\r\n  doOrderBy(e) {\r\n    e.preventDefault();\r\n    const newOrderBy = e.target.getAttribute(\"data-value\");\r\n    this.setState({ orderBy: newOrderBy });\r\n  }\r\n  doOrder(e) {\r\n    e.preventDefault();\r\n    const newOrder = e.target.getAttribute(\"data-value\");\r\n    this.setState({ order: newOrder });\r\n  }\r\n  render() {\r\n    const orderBy = this.state.orderBy;\r\n    const order = this.state.order;\r\n    let sorted = this.state.myProject;\r\n\r\n    sorted = _.orderBy(\r\n      sorted,\r\n      item => {\r\n        return item[orderBy];\r\n      },\r\n      order\r\n    );\r\n\r\n    const items = sorted.map(item => {\r\n      return (\r\n        <YogaPerson\r\n          myProject={item}\r\n          key={item.id}\r\n          orderBy={this.state.orderBy}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"content\">\r\n          <div className=\"clearfix\">\r\n            <Dropdown\r\n              toggle={this.toggle}\r\n              dropdownActive={this.state.dropdownActive}\r\n              doOrderBy={this.doOrderBy}\r\n              doOrder={this.doOrder}\r\n              orderBy={this.state.orderBy}\r\n              order={this.state.order}\r\n            />\r\n          </div>\r\n          {items}\r\n          {/* <YogaPerson /> */}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPage1;\r\n"]},"metadata":{},"sourceType":"module"}