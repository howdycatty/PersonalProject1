{"ast":null,"code":"import _classCallCheck from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\src\\\\components\\\\YogaPerson.jsx\";\nimport React from \"react\";\nimport * as myProjectService from \"../services/myProjectService\";\nimport { Card, CardBody, CardFooter, Row, Col } from \"reactstrap\";\nimport CardAuthor from \"components/CardElements/CardAuthor.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\n\nvar YogaPerson =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(YogaPerson, _React$Component);\n\n  function YogaPerson(props) {\n    var _this;\n\n    _classCallCheck(this, YogaPerson);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(YogaPerson).call(this, props));\n    _this.state = {\n      myProject: []\n    };\n    return _this;\n  }\n\n  _createClass(YogaPerson, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          orderBy = _this$props.orderBy;\n      var input = categories; // array from the bottom of this script\n\n      var output = input.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"small\", {\n          className: orderBy === item ? \"active\" : null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, item, \":\"), \" \", data[item]);\n      });\n      return React.createElement(\"div\", {\n        className: \"media\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"media-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"media-object\",\n        src: data.image,\n        alt: \"\".concat(data.firstNme, \" \").concat(data.lastName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"media-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"media-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: orderBy === \"firstName\" ? \"active\" : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, data.firstName, \" \"), React.createElement(\"span\", {\n        className: orderBy === \"lastName\" ? \"active\" : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, data.lastName)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"bio:\"), \" \", data.bio), output, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"email:\"), \" \", React.createElement(\"a\", {\n        href: data.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" \", data.email, \" \"))));\n    }\n  }]);\n\n  return YogaPerson;\n}(React.Component);\n\nvar names = [[\"firstName\", \"first name\"], [\"lastName\", \"last name\"], [\"certifications\", \"certifications\"], [\"specializations\", \"specializations\"], [\"yogaStyle\", \"yoga style\"], [\"location\", \"location\"], [\"rates\", \"rates\"]];\nvar categories = [\"certifications\", \"specializations\", \"yogaStyle\", \"location\", \"rates\"]; // const data = [{ myProject }];\n\nexport default YogaPerson; // class YogaPerson extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       myProject: []\n//     };\n//   }\n//   componentDidMount() {\n//     console.log(\"mounted\");\n//     myProjectService\n//       .getAllProfiles()\n//       .then(this.onGetAllSuccess)\n//       .catch(this.onError);\n//   }\n//   onGetAllSuccess = response => {\n//     console.log(\"successful get all profiles\");\n//     this.setState({\n//       myProject: response.data.items\n//     });\n//     console.log(response.data.items);\n//   };\n//   onDeleteSuccess = () => {};\n//   onError = () => {\n//     console.log(\"error\");\n//   };\n//   onProfileUpdate = (e, yoga) => {\n//     debugger;\n//     let id = yoga.id;\n//     this.props.history.push(\"/register/\" + id, yoga);\n//   };\n//   onProfileDelete(e, yoga) {\n//     debugger;\n//     let id = yoga.id;\n//     myProjectService\n//       .deleteProfile(id)\n//       .then(response => {\n//         let list = [...this.state.myProject];\n//         let newList = list.filter(object => object.id !== yoga.id);\n//         this.setState({ myProject: [...newList] }, () =>\n//           console.log(this.state)\n//         );\n//       })\n//       .catch(this.onError);\n//   }\n//   mapProject = yoga => {\n//     return (\n//       <React.Fragment key={yoga.id}>\n//         <Col md={4}>\n//           <Card className=\"card-user\">\n//             <div className=\"image\">\n//               <img\n//                 src={\n//                   \"https://images.pexels.com/photos/262325/pexels-photo-262325.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\n//                 }\n//                 alt=\"...\"\n//               />\n//             </div>\n//             <CardBody>\n//               <CardAuthor\n//                 avatar={yoga.image}\n//                 avatarAlt=\"...\"\n//                 title={yoga.firstName + \" \" + yoga.lastName}\n//               />\n//               <p className=\"description text-center\">\n//                 {\" \"}\n//                 Certifications: {yoga.certifications}\n//               </p>\n//               <p className=\"description text-center\">\n//                 {\" \"}\n//                 Specializations: {yoga.specializations}\n//               </p>\n//               <p className=\"description text-center\">\n//                 {\" \"}\n//                 Yoga Style: {yoga.yogaStyle}\n//               </p>\n//               <p className=\"description text-center\"> Rates: {yoga.rates}</p>\n//               <p className=\"description text-center\">\n//                 {\" \"}\n//                 Location: {yoga.location}\n//               </p>\n//               <p className=\"description text-center\">Bio: {yoga.bio}</p>\n//             </CardBody>\n//             <hr />\n//             <Col lg={12} className=\"mr-auto   text-center\">\n//               <h7>\n//                 Website:\n//                 <br />\n//                 <small>{yoga.website}</small>\n//               </h7>\n//             </Col>\n//             <CardFooter>\n//               <hr />\n//               <div className=\"button-container\">\n//                 <Row>\n//                   <Col xs={6} sm={6} md={6} lg={6} className=\"ml-auto\">\n//                     <h7>\n//                       Email:\n//                       <br />\n//                       <small>{yoga.email}</small>\n//                     </h7>\n//                   </Col>\n//                   <Col xs={6} sm={6} md={6} lg={4} className=\"mr-auto ml-auto\">\n//                     <h7>\n//                       Phone:\n//                       <br />\n//                       <small>{yoga.phone}</small>\n//                     </h7>\n//                   </Col>\n//                 </Row>\n//               </div>\n//               <hr />\n//               <Row>\n//                 <div\n//                   onClick={e => this.onProfileUpdate(e, yoga)}\n//                   className=\" ml-auto mr-auto\"\n//                 >\n//                   <Button size=\"sm\" color=\"success\">\n//                     Update\n//                   </Button>\n//                 </div>\n//                 <div\n//                   onClick={e => this.onProfileDelete(e, yoga)}\n//                   className=\" ml-auto mr-auto\"\n//                 >\n//                   <Button size=\"sm\" color=\"danger\">\n//                     Delete\n//                   </Button>\n//                 </div>\n//               </Row>\n//             </CardFooter>\n//           </Card>\n//         </Col>\n//       </React.Fragment>\n//     );\n//   };\n//   render() {\n//     const categories = [\"company\", \"job\", \"city\", \"gender\"];\n//     const { myProject, orderBy } = this.props;\n//     const input = categories; // array from the bottom of this script\n//     const output = input.map(item => {\n//       return (\n//         <div>\n//           <small className={orderBy === item ? \"active\" : null}>{item}:</small>{\" \"}\n//           {myProject[item]}\n//         </div>\n//       );\n//     });\n//     return (\n//       <div className=\"media\">\n//         <div className=\"media-left\">\n//           <img\n//             className=\"media-object\"\n//             src={myProject.image}\n//             alt={`${myProject.firstName} ${myProject.lastName}`}\n//           />\n//         </div>\n//         <div className=\"media-body\">\n//           <h4 className=\"media-heading\">\n//             <span className={orderBy === \"firstName\" ? \"active\" : null}>\n//               {myProject.firstName}{\" \"}\n//             </span>\n//             <span className={orderBy === \"lastName\" ? \"active\" : null}>\n//               {myProject.lastName}\n//             </span>\n//           </h4>\n//           <div>\n//             <small>about:</small> {myProject.rates}\n//           </div>\n//           {output}\n//           <div>\n//             <small>email:</small>{\" \"}\n//             <a href={myProject.email}> {myProject.email} </a>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default YogaPerson;","map":{"version":3,"sources":["C:\\SF.Code\\PersonalProject1\\client\\src\\components\\YogaPerson.jsx"],"names":["React","myProjectService","Card","CardBody","CardFooter","Row","Col","CardAuthor","Button","YogaPerson","props","state","myProject","data","orderBy","input","categories","output","map","item","image","firstNme","lastName","firstName","bio","email","Component","names"],"mappings":"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":["import React from \"react\";\r\nimport * as myProjectService from \"../services/myProjectService\";\r\n\r\nimport { Card, CardBody, CardFooter, Row, Col } from \"reactstrap\";\r\n\r\nimport CardAuthor from \"components/CardElements/CardAuthor.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nclass YogaPerson extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      myProject: []\r\n    };\r\n  }\r\n  render() {\r\n    const { data, orderBy } = this.props;\r\n    const input = categories; // array from the bottom of this script\r\n    const output = input.map(item => {\r\n      return (\r\n        <div>\r\n          <small className={orderBy === item ? \"active\" : null}>{item}:</small>{\" \"}\r\n          {data[item]}\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <img\r\n            className=\"media-object\"\r\n            src={data.image}\r\n            alt={`${data.firstNme} ${data.lastName}`}\r\n          />\r\n        </div>\r\n        <div className=\"media-body\">\r\n          <h4 className=\"media-heading\">\r\n            <span className={orderBy === \"firstName\" ? \"active\" : null}>\r\n              {data.firstName}{\" \"}\r\n            </span>\r\n            <span className={orderBy === \"lastName\" ? \"active\" : null}>\r\n              {data.lastName}\r\n            </span>\r\n          </h4>\r\n          <div>\r\n            <small>bio:</small> {data.bio}\r\n          </div>\r\n          {output}\r\n          <div>\r\n            <small>email:</small> <a href={data.email}> {data.email} </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst names = [\r\n  [\"firstName\", \"first name\"],\r\n  [\"lastName\", \"last name\"],\r\n  [\"certifications\", \"certifications\"],\r\n  [\"specializations\", \"specializations\"],\r\n  [\"yogaStyle\", \"yoga style\"],\r\n  [\"location\", \"location\"],\r\n  [\"rates\", \"rates\"]\r\n];\r\nconst categories = [\r\n  \"certifications\",\r\n  \"specializations\",\r\n  \"yogaStyle\",\r\n  \"location\",\r\n  \"rates\"\r\n];\r\n// const data = [{ myProject }];\r\n\r\nexport default YogaPerson;\r\n\r\n// class YogaPerson extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       myProject: []\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     console.log(\"mounted\");\r\n//     myProjectService\r\n//       .getAllProfiles()\r\n//       .then(this.onGetAllSuccess)\r\n//       .catch(this.onError);\r\n//   }\r\n\r\n//   onGetAllSuccess = response => {\r\n//     console.log(\"successful get all profiles\");\r\n//     this.setState({\r\n//       myProject: response.data.items\r\n//     });\r\n\r\n//     console.log(response.data.items);\r\n//   };\r\n\r\n//   onDeleteSuccess = () => {};\r\n\r\n//   onError = () => {\r\n//     console.log(\"error\");\r\n//   };\r\n\r\n//   onProfileUpdate = (e, yoga) => {\r\n//     debugger;\r\n//     let id = yoga.id;\r\n//     this.props.history.push(\"/register/\" + id, yoga);\r\n//   };\r\n\r\n//   onProfileDelete(e, yoga) {\r\n//     debugger;\r\n//     let id = yoga.id;\r\n\r\n//     myProjectService\r\n//       .deleteProfile(id)\r\n//       .then(response => {\r\n//         let list = [...this.state.myProject];\r\n//         let newList = list.filter(object => object.id !== yoga.id);\r\n//         this.setState({ myProject: [...newList] }, () =>\r\n//           console.log(this.state)\r\n//         );\r\n//       })\r\n//       .catch(this.onError);\r\n//   }\r\n\r\n//   mapProject = yoga => {\r\n//     return (\r\n//       <React.Fragment key={yoga.id}>\r\n//         <Col md={4}>\r\n//           <Card className=\"card-user\">\r\n//             <div className=\"image\">\r\n//               <img\r\n//                 src={\r\n//                   \"https://images.pexels.com/photos/262325/pexels-photo-262325.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\r\n//                 }\r\n//                 alt=\"...\"\r\n//               />\r\n//             </div>\r\n//             <CardBody>\r\n//               <CardAuthor\r\n//                 avatar={yoga.image}\r\n//                 avatarAlt=\"...\"\r\n//                 title={yoga.firstName + \" \" + yoga.lastName}\r\n//               />\r\n//               <p className=\"description text-center\">\r\n//                 {\" \"}\r\n//                 Certifications: {yoga.certifications}\r\n//               </p>\r\n//               <p className=\"description text-center\">\r\n//                 {\" \"}\r\n//                 Specializations: {yoga.specializations}\r\n//               </p>\r\n//               <p className=\"description text-center\">\r\n//                 {\" \"}\r\n//                 Yoga Style: {yoga.yogaStyle}\r\n//               </p>\r\n//               <p className=\"description text-center\"> Rates: {yoga.rates}</p>\r\n//               <p className=\"description text-center\">\r\n//                 {\" \"}\r\n//                 Location: {yoga.location}\r\n//               </p>\r\n\r\n//               <p className=\"description text-center\">Bio: {yoga.bio}</p>\r\n//             </CardBody>\r\n//             <hr />\r\n//             <Col lg={12} className=\"mr-auto   text-center\">\r\n//               <h7>\r\n//                 Website:\r\n//                 <br />\r\n//                 <small>{yoga.website}</small>\r\n//               </h7>\r\n//             </Col>\r\n\r\n//             <CardFooter>\r\n//               <hr />\r\n//               <div className=\"button-container\">\r\n//                 <Row>\r\n//                   <Col xs={6} sm={6} md={6} lg={6} className=\"ml-auto\">\r\n//                     <h7>\r\n//                       Email:\r\n//                       <br />\r\n//                       <small>{yoga.email}</small>\r\n//                     </h7>\r\n//                   </Col>\r\n//                   <Col xs={6} sm={6} md={6} lg={4} className=\"mr-auto ml-auto\">\r\n//                     <h7>\r\n//                       Phone:\r\n//                       <br />\r\n//                       <small>{yoga.phone}</small>\r\n//                     </h7>\r\n//                   </Col>\r\n//                 </Row>\r\n//               </div>\r\n\r\n//               <hr />\r\n//               <Row>\r\n//                 <div\r\n//                   onClick={e => this.onProfileUpdate(e, yoga)}\r\n//                   className=\" ml-auto mr-auto\"\r\n//                 >\r\n//                   <Button size=\"sm\" color=\"success\">\r\n//                     Update\r\n//                   </Button>\r\n//                 </div>\r\n//                 <div\r\n//                   onClick={e => this.onProfileDelete(e, yoga)}\r\n//                   className=\" ml-auto mr-auto\"\r\n//                 >\r\n//                   <Button size=\"sm\" color=\"danger\">\r\n//                     Delete\r\n//                   </Button>\r\n//                 </div>\r\n//               </Row>\r\n//             </CardFooter>\r\n//           </Card>\r\n//         </Col>\r\n//       </React.Fragment>\r\n//     );\r\n//   };\r\n\r\n//   render() {\r\n//     const categories = [\"company\", \"job\", \"city\", \"gender\"];\r\n//     const { myProject, orderBy } = this.props;\r\n//     const input = categories; // array from the bottom of this script\r\n//     const output = input.map(item => {\r\n//       return (\r\n//         <div>\r\n//           <small className={orderBy === item ? \"active\" : null}>{item}:</small>{\" \"}\r\n//           {myProject[item]}\r\n//         </div>\r\n//       );\r\n//     });\r\n//     return (\r\n//       <div className=\"media\">\r\n//         <div className=\"media-left\">\r\n//           <img\r\n//             className=\"media-object\"\r\n//             src={myProject.image}\r\n//             alt={`${myProject.firstName} ${myProject.lastName}`}\r\n//           />\r\n//         </div>\r\n//         <div className=\"media-body\">\r\n//           <h4 className=\"media-heading\">\r\n//             <span className={orderBy === \"firstName\" ? \"active\" : null}>\r\n//               {myProject.firstName}{\" \"}\r\n//             </span>\r\n//             <span className={orderBy === \"lastName\" ? \"active\" : null}>\r\n//               {myProject.lastName}\r\n//             </span>\r\n//           </h4>\r\n//           <div>\r\n//             <small>about:</small> {myProject.rates}\r\n//           </div>\r\n//           {output}\r\n//           <div>\r\n//             <small>email:</small>{\" \"}\r\n//             <a href={myProject.email}> {myProject.email} </a>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default YogaPerson;\r\n"]},"metadata":{},"sourceType":"module"}