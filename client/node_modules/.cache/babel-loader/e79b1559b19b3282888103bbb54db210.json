{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _templateObject = _taggedTemplateLiteralLoose(['', '.', ''], ['', '.', '']);\n\nexports.default = ObjectSchema;\n\nvar _has = require('lodash/has');\n\nvar _has2 = _interopRequireDefault(_has);\n\nvar _omit = require('lodash/omit');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nvar _snakeCase2 = require('lodash/snakeCase');\n\nvar _snakeCase3 = _interopRequireDefault(_snakeCase2);\n\nvar _camelCase2 = require('lodash/camelCase');\n\nvar _camelCase3 = _interopRequireDefault(_camelCase2);\n\nvar _mapKeys = require('lodash/mapKeys');\n\nvar _mapKeys2 = _interopRequireDefault(_mapKeys);\n\nvar _transform = require('lodash/transform');\n\nvar _transform2 = _interopRequireDefault(_transform);\n\nvar _propertyExpr = require('property-expr');\n\nvar _mixed = require('./mixed');\n\nvar _mixed2 = _interopRequireDefault(_mixed);\n\nvar _locale = require('./locale.js');\n\nvar _sortFields = require('./util/sortFields');\n\nvar _sortFields2 = _interopRequireDefault(_sortFields);\n\nvar _sortByKeyOrder = require('./util/sortByKeyOrder');\n\nvar _sortByKeyOrder2 = _interopRequireDefault(_sortByKeyOrder);\n\nvar _inherits = require('./util/inherits');\n\nvar _inherits2 = _interopRequireDefault(_inherits);\n\nvar _makePath = require('./util/makePath');\n\nvar _makePath2 = _interopRequireDefault(_makePath);\n\nvar _runValidations = require('./util/runValidations');\n\nvar _runValidations2 = _interopRequireDefault(_runValidations);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  strings.raw = raw;\n  return strings;\n}\n\nvar isObject = function isObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n};\n\nfunction unknown(ctx, value) {\n  var known = Object.keys(ctx.fields);\n  return Object.keys(value).filter(function (key) {\n    return known.indexOf(key) === -1;\n  });\n}\n\nfunction ObjectSchema(spec) {\n  var _this2 = this;\n\n  if (!(this instanceof ObjectSchema)) return new ObjectSchema(spec);\n\n  _mixed2.default.call(this, {\n    type: 'object',\n    default: function _default() {\n      var _this = this;\n\n      var dft = (0, _transform2.default)(this._nodes, function (obj, key) {\n        obj[key] = _this.fields[key].default ? _this.fields[key].default() : undefined;\n      }, {});\n      return Object.keys(dft).length === 0 ? undefined : dft;\n    }\n  });\n\n  this.fields = Object.create(null);\n  this._nodes = [];\n  this._excludedEdges = [];\n  this.withMutation(function () {\n    _this2.transform(function coerce(value) {\n      if (typeof value === 'string') {\n        try {\n          value = JSON.parse(value);\n        } catch (err) {\n          value = null;\n        }\n      }\n\n      if (this.isType(value)) return value;\n      return null;\n    });\n\n    if (spec) {\n      _this2.shape(spec);\n    }\n  });\n}\n\n(0, _inherits2.default)(ObjectSchema, _mixed2.default, {\n  _typeCheck: function _typeCheck(value) {\n    return isObject(value) || typeof value === 'function';\n  },\n  _cast: function _cast(_value) {\n    var _this3 = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var value = _mixed2.default.prototype._cast.call(this, _value, options); //should ignore nulls here\n\n\n    if (value === undefined) return this.default();\n    if (!this._typeCheck(value)) return value;\n\n    var fields = this.fields,\n        strip = this._option('stripUnknown', options) === true,\n        extra = Object.keys(value).filter(function (v) {\n      return _this3._nodes.indexOf(v) === -1;\n    }),\n        props = this._nodes.concat(extra);\n\n    var innerOptions = _extends({}, options, {\n      parent: {},\n      // is filled during the transform below\n      __validating: false\n    });\n\n    value = (0, _transform2.default)(props, function (obj, prop) {\n      var field = fields[prop];\n      var exists = (0, _has2.default)(value, prop);\n\n      if (field) {\n        var fieldValue = void 0;\n        var strict = field._options && field._options.strict; // safe to mutate since this is fired in sequence\n\n        innerOptions.path = (0, _makePath2.default)(_templateObject, options.path, prop);\n        innerOptions.value = value[prop];\n        field = field.resolve(innerOptions);\n        if (field._strip === true) return;\n        fieldValue = !options.__validating || !strict ? field.cast(value[prop], innerOptions) : value[prop];\n        if (fieldValue !== undefined) obj[prop] = fieldValue;\n      } else if (exists && !strip) obj[prop] = value[prop];\n    }, innerOptions.parent);\n    return value;\n  },\n  _validate: function _validate(_value) {\n    var _this4 = this;\n\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var endEarly = void 0,\n        recursive = void 0;\n    var sync = opts.sync;\n    var errors = [];\n    var originalValue = opts.originalValue != null ? opts.originalValue : _value;\n    endEarly = this._option('abortEarly', opts);\n    recursive = this._option('recursive', opts);\n    opts = _extends({}, opts, {\n      __validating: true,\n      originalValue: originalValue\n    });\n    return _mixed2.default.prototype._validate.call(this, _value, opts).catch((0, _runValidations.propagateErrors)(endEarly, errors)).then(function (value) {\n      if (!recursive || !isObject(value)) {\n        // only iterate though actual objects\n        if (errors.length) throw errors[0];\n        return value;\n      }\n\n      originalValue = originalValue || value;\n\n      var validations = _this4._nodes.map(function (key) {\n        var path = (0, _makePath2.default)(_templateObject, opts.path, key);\n        var field = _this4.fields[key];\n\n        var innerOptions = _extends({}, opts, {\n          path: path,\n          parent: value,\n          originalValue: originalValue[key]\n        });\n\n        if (field) {\n          // inner fields are always strict:\n          // 1. this isn't strict so the casting will also have cast inner values\n          // 2. this is strict in which case the nested values weren't cast either\n          innerOptions.strict = true;\n          if (field.validate) return field.validate(value[key], innerOptions);\n        }\n\n        return true;\n      });\n\n      return (0, _runValidations2.default)({\n        sync: sync,\n        validations: validations,\n        value: value,\n        errors: errors,\n        endEarly: endEarly,\n        path: opts.path,\n        sort: (0, _sortByKeyOrder2.default)(_this4.fields)\n      });\n    });\n  },\n  concat: function concat(schema) {\n    var next = _mixed2.default.prototype.concat.call(this, schema);\n\n    next._nodes = (0, _sortFields2.default)(next.fields, next._excludedEdges);\n    return next;\n  },\n  shape: function shape(schema) {\n    var excludes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var next = this.clone(),\n        fields = _extends(next.fields, schema);\n\n    next.fields = fields;\n\n    if (excludes.length) {\n      if (!Array.isArray(excludes[0])) excludes = [excludes];\n      var keys = excludes.map(function (_ref) {\n        var first = _ref[0],\n            second = _ref[1];\n        return first + '-' + second;\n      });\n      next._excludedEdges = next._excludedEdges.concat(keys);\n    }\n\n    next._nodes = (0, _sortFields2.default)(fields, next._excludedEdges);\n    return next;\n  },\n  from: function from(_from, to, alias) {\n    var fromGetter = (0, _propertyExpr.getter)(_from, true);\n    return this.transform(function (obj) {\n      var newObj = obj;\n      if (obj == null) return obj;\n\n      if ((0, _has2.default)(obj, _from)) {\n        newObj = alias ? _extends({}, obj) : (0, _omit2.default)(obj, _from);\n        newObj[to] = fromGetter(obj);\n      }\n\n      return newObj;\n    });\n  },\n  noUnknown: function noUnknown() {\n    var noAllow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _locale.object.noUnknown;\n\n    if (typeof noAllow === 'string') {\n      message = noAllow;\n      noAllow = true;\n    }\n\n    var next = this.test({\n      name: 'noUnknown',\n      exclusive: true,\n      message: message,\n      test: function test(value) {\n        return value == null || !noAllow || unknown(this.schema, value).length === 0;\n      }\n    });\n    if (noAllow) next._options.stripUnknown = true;\n    return next;\n  },\n  transformKeys: function transformKeys(fn) {\n    return this.transform(function (obj) {\n      return obj && (0, _mapKeys2.default)(obj, function (_, key) {\n        return fn(key);\n      });\n    });\n  },\n  camelCase: function camelCase() {\n    return this.transformKeys(_camelCase3.default);\n  },\n  snakeCase: function snakeCase() {\n    return this.transformKeys(_snakeCase3.default);\n  },\n  constantCase: function constantCase() {\n    return this.transformKeys(function (key) {\n      return (0, _snakeCase3.default)(key).toUpperCase();\n    });\n  }\n});\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}