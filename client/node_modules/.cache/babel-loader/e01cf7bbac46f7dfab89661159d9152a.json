{"ast":null,"code":"/**\n * type-name - Just a reasonable typeof\n *\n * https://github.com/twada/type-name\n *\n * Copyright (c) 2014-2016 Takuto Wada\n * Licensed under the MIT license.\n *   https://github.com/twada/type-name/blob/master/LICENSE\n */\n'use strict';\n\nvar toStr = Object.prototype.toString;\n\nfunction funcName(f) {\n  if (f.name) {\n    return f.name;\n  }\n\n  var match = /^\\s*function\\s*([^\\(]*)/im.exec(f.toString());\n  return match ? match[1] : '';\n}\n\nfunction ctorName(obj) {\n  var strName = toStr.call(obj).slice(8, -1);\n\n  if ((strName === 'Object' || strName === 'Error') && obj.constructor) {\n    return funcName(obj.constructor);\n  }\n\n  return strName;\n}\n\nfunction typeName(val) {\n  var type;\n\n  if (val === null) {\n    return 'null';\n  }\n\n  type = typeof val;\n\n  if (type === 'object') {\n    return ctorName(val);\n  }\n\n  return type;\n}\n\nmodule.exports = typeName;","map":null,"metadata":{},"sourceType":"script"}