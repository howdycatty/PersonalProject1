{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = sortFields;\n\nvar _has = require('lodash/has');\n\nvar _has2 = _interopRequireDefault(_has);\n\nvar _toposort = require('toposort');\n\nvar _toposort2 = _interopRequireDefault(_toposort);\n\nvar _propertyExpr = require('property-expr');\n\nvar _Reference = require('../Reference');\n\nvar _Reference2 = _interopRequireDefault(_Reference);\n\nvar _isSchema = require('./isSchema');\n\nvar _isSchema2 = _interopRequireDefault(_isSchema);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction sortFields(fields) {\n  var excludes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var edges = [],\n      nodes = [];\n\n  function addNode(depPath, key) {\n    var node = (0, _propertyExpr.split)(depPath)[0];\n    if (!~nodes.indexOf(node)) nodes.push(node);\n    if (!~excludes.indexOf(key + '-' + node)) edges.push([key, node]);\n  }\n\n  for (var key in fields) {\n    if ((0, _has2.default)(fields, key)) {\n      var value = fields[key];\n      if (!~nodes.indexOf(key)) nodes.push(key);\n      if (_Reference2.default.isRef(value) && !value.isContext) addNode(value.path, key);else if ((0, _isSchema2.default)(value) && value._deps) value._deps.forEach(function (path) {\n        return addNode(path, key);\n      });\n    }\n  }\n\n  return _toposort2.default.array(nodes, edges).reverse();\n}\n\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}