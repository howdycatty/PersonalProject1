{"ast":null,"code":"import _classCallCheck from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\src\\\\components\\\\DropdownClass.jsx\";\nimport React from \"react\"; // import \"../../src/style/dropdown.css\";\n\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\n\nvar DropdownClass =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DropdownClass, _React$Component);\n\n  function DropdownClass(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownClass);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownClass).call(this, props));\n\n    _this.renderDropdown = function () {\n      debugger;\n\n      if (_this.props.dropdownActive === true) {\n        return React.createElement(\"ul\", {\n          className: \"dropdown-menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, _this.props.output, React.createElement(\"li\", {\n          className: \"divider\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: _this.props.doOrder,\n          \"data-value\": \"asc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"ascending \", _this.props.order === \"asc\" ? _this.props.checked : null)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: _this.props.doOrder,\n          \"data-value\": \"desc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"descending\", \" \", _this.props.order === \"desc\" ? _this.props.checked : null)));\n      } else {\n        return null;\n      }\n    };\n\n    _this.state = {\n      myProject: [],\n      dropdownOpen: false // firstName: \"\",\n      // lastName: \"\",\n      // certifications: \"\",\n      // specializations: \"\",\n      // yogaStyle: \"\",\n      // rates: \"\",\n      // location: \"\"\n\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DropdownClass, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          dropdownOpen: !prevState.dropdownOpen\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dropdownActive = _this$props.dropdownActive,\n          toggle = _this$props.toggle,\n          orderBy = _this$props.orderBy,\n          order = _this$props.order,\n          doOrderBy = _this$props.doOrderBy,\n          doOrder = _this$props.doOrder;\n      var checked = React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-ok\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n      var names = [[\"firstName\", \"first name\"], [\"lastName\", \"last name\"], [\"certifications\", \"certifications\"], [\"specializations\", \"specializations\"], [\"yogaStyle\", \"yoga style\"], [\"rates\", \"rates\"], [\"location\", \"location\"]];\n      var input = names; // array from the bottom of this script\n\n      var output = names.map(function (item) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: doOrderBy,\n          \"data-value\": item[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, item[1], \" \", orderBy === item[0] ? checked : null));\n      });\n\n      var renderDropdown = function renderDropdown() {\n        debugger;\n\n        if (dropdownActive === true) {\n          return React.createElement(\"ul\", {\n            className: \"dropdown-menu\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, output, React.createElement(\"li\", {\n            className: \"divider\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }), React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            onClick: doOrder,\n            \"data-value\": \"asc\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, \"ascending \", order === \"asc\" ? checked : null)), React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            onClick: doOrder,\n            \"data-value\": \"desc\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, \"descending \", order === \"desc\" ? checked : null)));\n        } else {\n          return null;\n        }\n      };\n\n      return React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Sort\"), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Header\"), React.createElement(DropdownItem, {\n        href: \"#\",\n        onClick: doOrder,\n        \"data-value\": \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"descending \", order === \"desc\" ? checked : null, \">Some Action\"), React.createElement(DropdownItem, {\n        onClick: doOrder,\n        \"data-value\": \"asc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"ascending \", order === \"asc\" ? checked : null, \">Quo Action\"))) //   <div\n      //     className={\n      //       dropdownActive ? \"dropdown  pull-right open\" : \"dropdown pull-right \"\n      //     }\n      //   >\n      //     <a className=\"btn btn-info\" onClick={toggle} href=\"#\">\n      //       Sort items by\n      //       <span className=\"caret\" />\n      //     </a>\n      //     <ul className=\"dropdown-menu\">\n      //       {output}\n      //       <li className=\"divider\" />\n      //       <li>\n      //         <a href=\"#\" onClick={doOrder} data-value=\"asc\">\n      //           ascending {order === \"asc\" ? checked : null}\n      //         </a>\n      //       </li>\n      //       <li>\n      //         <a href=\"#\" onClick={doOrder} data-value=\"desc\">\n      //           descending {order === \"desc\" ? checked : null}\n      //         </a>\n      //       </li>\n      //     </ul>\n      //   </div>\n      ;\n    }\n  }]);\n\n  return DropdownClass;\n}(React.Component); // firstName: \"\",\n// lastName: \"\",\n// certifications: \"\",\n// specializations: \"\",\n// yogaStyle: \"\",\n// bio: \"\",\n// rates: \"\",\n// location: \"\",\n// website: \"\",\n// email: \"\",\n// phone: \"\",\n// image: \"\"\n// const names = [\n//   [\"firstName\", \"first name\"],\n//   [\"lastName\", \"last name\"],\n//   [\"certifications\", \"certifications\"],\n//   [\"specializations\", \"specializations\"],\n//   [\"yogaStyle\", \"yoga style\"],\n//   [\"rates\", \"rates\"],\n//   [\"location\", \"location\"]\n// ];\n// const categories = [\"company\",\"job\",\"city\",\"gender\"]\n// const data =\n\n\nexport default DropdownClass;","map":{"version":3,"sources":["C:\\SF.Code\\PersonalProject1\\client\\src\\components\\DropdownClass.jsx"],"names":["React","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","DropdownClass","props","renderDropdown","dropdownActive","output","doOrder","order","checked","state","myProject","dropdownOpen","toggle","bind","setState","prevState","orderBy","doOrderBy","names","input","map","item","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACEC,QADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,YAJF,QAKO,YALP;;IAOMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;;AADiB,UAqBnBC,cArBmB,GAqBF,YAAM;AACrB;;AACA,UAAI,MAAKD,KAAL,CAAWE,cAAX,KAA8B,IAAlC,EAAwC;AACtC,eACE;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,MAAKF,KAAL,CAAWG,MADd,EAEE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAE,MAAKH,KAAL,CAAWI,OAAhC;AAAyC,wBAAW,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACa,MAAKJ,KAAL,CAAWK,KAAX,KAAqB,KAArB,GAA6B,MAAKL,KAAL,CAAWM,OAAxC,GAAkD,IAD/D,CADF,CAHF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAE,MAAKN,KAAL,CAAWI,OAAhC;AAAyC,wBAAW,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACa,GADb,EAEG,MAAKJ,KAAL,CAAWK,KAAX,KAAqB,MAArB,GAA8B,MAAKL,KAAL,CAAWM,OAAzC,GAAmD,IAFtD,CADF,CARF,CADF;AAiBD,OAlBD,MAkBO;AACL,eAAO,IAAP;AACD;AACF,KA5CkB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,YAAY,EAAE,KAFH,CAGX;AACA;AACA;AACA;AACA;AACA;AACA;;AATW,KAAb;AAWA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,uDAAd;AAbiB;AAclB;;;;6BACQ;AACP,WAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BJ,UAAAA,YAAY,EAAE,CAACI,SAAS,CAACJ;AADC,SAAL;AAAA,OAAvB;AAGD;;;6BA2BQ;AAAA,wBAQH,KAAKT,KARF;AAAA,UAELE,cAFK,eAELA,cAFK;AAAA,UAGLQ,MAHK,eAGLA,MAHK;AAAA,UAILI,OAJK,eAILA,OAJK;AAAA,UAKLT,KALK,eAKLA,KALK;AAAA,UAMLU,SANK,eAMLA,SANK;AAAA,UAOLX,OAPK,eAOLA,OAPK;AASP,UAAME,OAAO,GAAG;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB;AACA,UAAMU,KAAK,GAAG,CACZ,CAAC,WAAD,EAAc,YAAd,CADY,EAEZ,CAAC,UAAD,EAAa,WAAb,CAFY,EAGZ,CAAC,gBAAD,EAAmB,gBAAnB,CAHY,EAIZ,CAAC,iBAAD,EAAoB,iBAApB,CAJY,EAKZ,CAAC,WAAD,EAAc,YAAd,CALY,EAMZ,CAAC,OAAD,EAAU,OAAV,CANY,EAOZ,CAAC,UAAD,EAAa,UAAb,CAPY,CAAd;AAUA,UAAMC,KAAK,GAAGD,KAAd,CApBO,CAoBc;;AACrB,UAAMb,MAAM,GAAGa,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI,EAAI;AAC/B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEJ,SAArB;AAAgC,wBAAYI,IAAI,CAAC,CAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,IAAI,CAAC,CAAD,CADP,OACaL,OAAO,KAAKK,IAAI,CAAC,CAAD,CAAhB,GAAsBb,OAAtB,GAAgC,IAD7C,CADF,CADF;AAOD,OARc,CAAf;;AAUA,UAAIL,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB;;AACA,YAAIC,cAAc,KAAK,IAAvB,EAA6B;AAC3B,iBACE;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGC,MADH,EAEE;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAG,YAAA,IAAI,EAAC,GAAR;AAAY,YAAA,OAAO,EAAEC,OAArB;AAA8B,0BAAW,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACaC,KAAK,KAAK,KAAV,GAAkBC,OAAlB,GAA4B,IADzC,CADF,CAHF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAG,YAAA,IAAI,EAAC,GAAR;AAAY,YAAA,OAAO,EAAEF,OAArB;AAA8B,0BAAW,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACcC,KAAK,KAAK,MAAV,GAAmBC,OAAnB,GAA6B,IAD3C,CADF,CARF,CADF;AAgBD,SAjBD,MAiBO;AACL,iBAAO,IAAP;AACD;AACF,OAtBD;;AAuBA,aACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWE,YAA7B;AAA2C,QAAA,MAAM,EAAE,KAAKC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,MAAM,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAC,GAAnB;AAAuB,QAAA,OAAO,EAAEN,OAAhC;AAAyC,sBAAW,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACcC,KAAK,KAAK,MAAV,GAAmBC,OAAnB,GAA6B,IAD3C,iBAFF,EAME,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAEF,OAAvB;AAAgC,sBAAW,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACaC,KAAK,KAAK,KAAV,GAAkBC,OAAlB,GAA4B,IADzC,gBANF,CAFF,CADF,CAcE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCF;AAuCD;;;;EA5IyBZ,KAAK,CAAC0B,S,GA+IlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAerB,aAAf","sourcesContent":["import React from \"react\";\r\n// import \"../../src/style/dropdown.css\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\n\r\nclass DropdownClass extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      myProject: [],\r\n      dropdownOpen: false\r\n      // firstName: \"\",\r\n      // lastName: \"\",\r\n      // certifications: \"\",\r\n      // specializations: \"\",\r\n      // yogaStyle: \"\",\r\n      // rates: \"\",\r\n      // location: \"\"\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  }\r\n\r\n  renderDropdown = () => {\r\n    debugger;\r\n    if (this.props.dropdownActive === true) {\r\n      return (\r\n        <ul className=\"dropdown-menu\">\r\n          {this.props.output}\r\n          <li className=\"divider\" />\r\n          <li>\r\n            <a href=\"#\" onClick={this.props.doOrder} data-value=\"asc\">\r\n              ascending {this.props.order === \"asc\" ? this.props.checked : null}\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\" onClick={this.props.doOrder} data-value=\"desc\">\r\n              descending{\" \"}\r\n              {this.props.order === \"desc\" ? this.props.checked : null}\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      dropdownActive,\r\n      toggle,\r\n      orderBy,\r\n      order,\r\n      doOrderBy,\r\n      doOrder\r\n    } = this.props;\r\n    const checked = <span className=\"glyphicon glyphicon-ok\" />;\r\n    const names = [\r\n      [\"firstName\", \"first name\"],\r\n      [\"lastName\", \"last name\"],\r\n      [\"certifications\", \"certifications\"],\r\n      [\"specializations\", \"specializations\"],\r\n      [\"yogaStyle\", \"yoga style\"],\r\n      [\"rates\", \"rates\"],\r\n      [\"location\", \"location\"]\r\n    ];\r\n\r\n    const input = names; // array from the bottom of this script\r\n    const output = names.map(item => {\r\n      return (\r\n        <li>\r\n          <a href=\"#\" onClick={doOrderBy} data-value={item[0]}>\r\n            {item[1]} {orderBy === item[0] ? checked : null}\r\n          </a>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let renderDropdown = () => {\r\n      debugger;\r\n      if (dropdownActive === true) {\r\n        return (\r\n          <ul className=\"dropdown-menu\">\r\n            {output}\r\n            <li className=\"divider\" />\r\n            <li>\r\n              <a href=\"#\" onClick={doOrder} data-value=\"asc\">\r\n                ascending {order === \"asc\" ? checked : null}\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\" onClick={doOrder} data-value=\"desc\">\r\n                descending {order === \"desc\" ? checked : null}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n    return (\r\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n        <DropdownToggle caret>Sort</DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem header>Header</DropdownItem>\r\n          <DropdownItem href=\"#\" onClick={doOrder} data-value=\"desc\">\r\n            descending {order === \"desc\" ? checked : null}>Some Action\r\n          </DropdownItem>\r\n\r\n          <DropdownItem onClick={doOrder} data-value=\"asc\">\r\n            ascending {order === \"asc\" ? checked : null}>Quo Action\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n      //   <div\r\n      //     className={\r\n      //       dropdownActive ? \"dropdown  pull-right open\" : \"dropdown pull-right \"\r\n      //     }\r\n      //   >\r\n      //     <a className=\"btn btn-info\" onClick={toggle} href=\"#\">\r\n      //       Sort items by\r\n      //       <span className=\"caret\" />\r\n      //     </a>\r\n      //     <ul className=\"dropdown-menu\">\r\n      //       {output}\r\n      //       <li className=\"divider\" />\r\n      //       <li>\r\n      //         <a href=\"#\" onClick={doOrder} data-value=\"asc\">\r\n      //           ascending {order === \"asc\" ? checked : null}\r\n      //         </a>\r\n      //       </li>\r\n      //       <li>\r\n      //         <a href=\"#\" onClick={doOrder} data-value=\"desc\">\r\n      //           descending {order === \"desc\" ? checked : null}\r\n      //         </a>\r\n      //       </li>\r\n      //     </ul>\r\n      //   </div>\r\n    );\r\n  }\r\n}\r\n\r\n// firstName: \"\",\r\n// lastName: \"\",\r\n// certifications: \"\",\r\n// specializations: \"\",\r\n// yogaStyle: \"\",\r\n// bio: \"\",\r\n// rates: \"\",\r\n// location: \"\",\r\n// website: \"\",\r\n// email: \"\",\r\n// phone: \"\",\r\n// image: \"\"\r\n\r\n// const names = [\r\n//   [\"firstName\", \"first name\"],\r\n//   [\"lastName\", \"last name\"],\r\n//   [\"certifications\", \"certifications\"],\r\n//   [\"specializations\", \"specializations\"],\r\n//   [\"yogaStyle\", \"yoga style\"],\r\n//   [\"rates\", \"rates\"],\r\n//   [\"location\", \"location\"]\r\n// ];\r\n// const categories = [\"company\",\"job\",\"city\",\"gender\"]\r\n// const data =\r\n\r\nexport default DropdownClass;\r\n"]},"metadata":{},"sourceType":"module"}