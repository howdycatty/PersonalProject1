{"ast":null,"code":"import _classCallCheck from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\SF.Code\\\\PersonalProject1\\\\client\\\\src\\\\components\\\\DropdownClass.jsx\";\nimport React from \"react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\n\nvar DropdownClass =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DropdownClass, _React$Component);\n\n  function DropdownClass(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownClass);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownClass).call(this, props));\n    _this.state = {\n      myProject: [],\n      dropdownOpen: false,\n      firstName: \"\",\n      lastName: \"\",\n      certifications: \"\",\n      specializations: \"\",\n      yogaStyle: \"\",\n      rates: \"\",\n      location: \"\"\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DropdownClass, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          dropdownOpen: !prevState.dropdownOpen\n        };\n      });\n    } // renderDropdown = () => {\n    //   debugger;\n    //   if (this.props.dropdownActive === true) {\n    //     return (\n    //       <ul className=\"dropdown-menu\">\n    //         {this.props.output}\n    //         <li className=\"divider\" />\n    //         <li>\n    //           <a href=\"#\" onClick={this.props.doOrder} data-value=\"asc\">\n    //             ascending {this.props.order === \"asc\" ? this.props.checked : null}\n    //           </a>\n    //         </li>\n    //         <li>\n    //           <a href=\"#\" onClick={this.props.doOrder} data-value=\"desc\">\n    //             descending{\" \"}\n    //             {this.props.order === \"desc\" ? this.props.checked : null}\n    //           </a>\n    //         </li>\n    //       </ul>\n    //     );\n    //   } else {\n    //     return null;\n    //   }\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dropdownActive = _this$props.dropdownActive,\n          toggle = _this$props.toggle,\n          orderBy = _this$props.orderBy,\n          order = _this$props.order,\n          doOrderBy = _this$props.doOrderBy,\n          doOrder = _this$props.doOrder;\n      var checked = React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-ok\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n      var names = [[\"firstName\", \"first name\"], [\"lastName\", \"Last name\"], [\"certifications\", \"certifications\"], [\"specializations\", \"specializations\"], [\"yogaStyle\", \"yoga style\"], [\"rates\", \"rates\"], [\"location\", \"location\"]]; // const input = names; // array from the bottom of this script\n\n      var output = names.map(function (item) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: doOrderBy,\n          \"data-value\": item[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"*\"), item[1], \" \", orderBy === item[0] ? checked : null));\n      }); // let renderDropdown = () => {\n      //   debugger;\n      //   if (dropdownActive === true) {\n      //     return (\n      //       <ul className=\"dropdown-menu\">\n      //         {output}\n      //         <li className=\"divider\" />\n      //         <li>\n      //           <a href=\"#\" onClick={doOrder} data-value=\"asc\">\n      //             ascending {order === \"asc\" ? checked : null}\n      //           </a>\n      //         </li>\n      //         <li>\n      //           <a href=\"#\" onClick={doOrder} data-value=\"desc\">\n      //             descending {order === \"desc\" ? checked : null}\n      //           </a>\n      //         </li>\n      //       </ul>\n      //     );\n      //   } else {\n      //     return null;\n      //   }\n      // };\n\n      return React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Sort\"), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Arrange by: \"), output, React.createElement(DropdownItem, {\n        href: \"#\",\n        onClick: doOrder,\n        \"data-value\": \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"descending \", order === \"desc\" ? checked : null, \">bye bye\"), React.createElement(DropdownItem, {\n        onClick: doOrder,\n        \"data-value\": \"asc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"ascending \", order === \"asc\" ? checked : null, \">hi hi\"))) // <div\n      //   className={\n      //     dropdownActive ? \"dropdown  pull-right open\" : \"dropdown pull-right \"\n      //   }\n      // >\n      //   <a className=\"btn btn-info\" onClick={toggle} href=\"#\">\n      //     Sort items by\n      //     <span className=\"caret\" />\n      //   </a>\n      //   <ul className=\"dropdown-menu\">\n      //     {output}\n      //     <li className=\"divider\" />\n      //     <li>\n      //       <a href=\"#\" onClick={doOrder} data-value=\"asc\">\n      //         ascending {order === \"asc\" ? checked : null}\n      //       </a>\n      //     </li>\n      //     <li>\n      //       <a href=\"#\" onClick={doOrder} data-value=\"desc\">\n      //         descending {order === \"desc\" ? checked : null}\n      //       </a>\n      //     </li>\n      //   </ul>\n      // </div>\n      ;\n    }\n  }]);\n\n  return DropdownClass;\n}(React.Component);\n\nexport default DropdownClass;","map":{"version":3,"sources":["C:\\SF.Code\\PersonalProject1\\client\\src\\components\\DropdownClass.jsx"],"names":["React","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","DropdownClass","props","state","myProject","dropdownOpen","firstName","lastName","certifications","specializations","yogaStyle","rates","location","toggle","bind","setState","prevState","dropdownActive","orderBy","order","doOrderBy","doOrder","checked","names","output","map","item","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\n\r\nclass DropdownClass extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      myProject: [],\r\n      dropdownOpen: false,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      certifications: \"\",\r\n      specializations: \"\",\r\n      yogaStyle: \"\",\r\n      rates: \"\",\r\n      location: \"\"\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  }\r\n\r\n  // renderDropdown = () => {\r\n  //   debugger;\r\n  //   if (this.props.dropdownActive === true) {\r\n  //     return (\r\n  //       <ul className=\"dropdown-menu\">\r\n  //         {this.props.output}\r\n  //         <li className=\"divider\" />\r\n  //         <li>\r\n  //           <a href=\"#\" onClick={this.props.doOrder} data-value=\"asc\">\r\n  //             ascending {this.props.order === \"asc\" ? this.props.checked : null}\r\n  //           </a>\r\n  //         </li>\r\n  //         <li>\r\n  //           <a href=\"#\" onClick={this.props.doOrder} data-value=\"desc\">\r\n  //             descending{\" \"}\r\n  //             {this.props.order === \"desc\" ? this.props.checked : null}\r\n  //           </a>\r\n  //         </li>\r\n  //       </ul>\r\n  //     );\r\n  //   } else {\r\n  //     return null;\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    const {\r\n      dropdownActive,\r\n      toggle,\r\n      orderBy,\r\n      order,\r\n      doOrderBy,\r\n      doOrder\r\n    } = this.props;\r\n    const checked = <span className=\"glyphicon glyphicon-ok\" />;\r\n    const names = [\r\n      [\"firstName\", \"first name\"],\r\n      [\"lastName\", \"Last name\"],\r\n      [\"certifications\", \"certifications\"],\r\n      [\"specializations\", \"specializations\"],\r\n      [\"yogaStyle\", \"yoga style\"],\r\n      [\"rates\", \"rates\"],\r\n      [\"location\", \"location\"]\r\n    ];\r\n\r\n    // const input = names; // array from the bottom of this script\r\n    const output = names.map(item => {\r\n      return (\r\n        <li>\r\n          <a href=\"#\" onClick={doOrderBy} data-value={item[0]}>\r\n            <span>*</span>\r\n            {item[1]} {orderBy === item[0] ? checked : null}\r\n          </a>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    // let renderDropdown = () => {\r\n    //   debugger;\r\n    //   if (dropdownActive === true) {\r\n    //     return (\r\n    //       <ul className=\"dropdown-menu\">\r\n    //         {output}\r\n    //         <li className=\"divider\" />\r\n    //         <li>\r\n    //           <a href=\"#\" onClick={doOrder} data-value=\"asc\">\r\n    //             ascending {order === \"asc\" ? checked : null}\r\n    //           </a>\r\n    //         </li>\r\n\r\n    //         <li>\r\n    //           <a href=\"#\" onClick={doOrder} data-value=\"desc\">\r\n    //             descending {order === \"desc\" ? checked : null}\r\n    //           </a>\r\n    //         </li>\r\n    //       </ul>\r\n    //     );\r\n    //   } else {\r\n    //     return null;\r\n    //   }\r\n    // };\r\n    return (\r\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n        <DropdownToggle caret>Sort</DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem header>Arrange by: </DropdownItem>\r\n          {output}\r\n          <DropdownItem href=\"#\" onClick={doOrder} data-value=\"desc\">\r\n            descending {order === \"desc\" ? checked : null}>bye bye\r\n          </DropdownItem>\r\n          <DropdownItem onClick={doOrder} data-value=\"asc\">\r\n            ascending {order === \"asc\" ? checked : null}>hi hi\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n      // <div\r\n      //   className={\r\n      //     dropdownActive ? \"dropdown  pull-right open\" : \"dropdown pull-right \"\r\n      //   }\r\n      // >\r\n      //   <a className=\"btn btn-info\" onClick={toggle} href=\"#\">\r\n      //     Sort items by\r\n      //     <span className=\"caret\" />\r\n      //   </a>\r\n      //   <ul className=\"dropdown-menu\">\r\n      //     {output}\r\n      //     <li className=\"divider\" />\r\n      //     <li>\r\n      //       <a href=\"#\" onClick={doOrder} data-value=\"asc\">\r\n      //         ascending {order === \"asc\" ? checked : null}\r\n      //       </a>\r\n      //     </li>\r\n      //     <li>\r\n      //       <a href=\"#\" onClick={doOrder} data-value=\"desc\">\r\n      //         descending {order === \"desc\" ? checked : null}\r\n      //       </a>\r\n      //     </li>\r\n      //   </ul>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropdownClass;\r\n"]},"metadata":{},"sourceType":"module"}